(*****************************************************************************)
(*                                                                           *)
(*                                                                           *)
(*  Copyright (C) 2025                                                       *)
(*    Gabriel Santamaria                                                     *)
(*                                                                           *)
(*                                                                           *)
(*  Licensed under the Apache License, Version 2.0 (the "License");          *)
(*  you may not use this file except in compliance with the License.         *)
(*  You may obtain a copy of the License at                                  *)
(*                                                                           *)
(*    http://www.apache.org/licenses/LICENSE-2.0                             *)
(*                                                                           *)
(*  Unless required by applicable law or agreed to in writing, software      *)
(*  distributed under the License is distributed on an "AS IS" BASIS,        *)
(*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. *)
(*  See the License for the specific language governing permissions and      *)
(*  limitations under the License.                                           *)
(*                                                                           *)
(*****************************************************************************)

open Soundml
module G = Audio.G

let float_ndarray = Tutils.dense_testable ~rtol:10e-4 ~atol:10e-4 Float32

let test_mel_shape () =
  let sr = 22050 in
  let nfft = 2048 in
  let nmels = 128 in
  let fmin = 0.0 in
  let filters = Filterbank.mel Float32 sr nfft nmels fmin in
  let expected_shape = [|nmels; (nfft / 2) + 1|] in
  Alcotest.(check (array int))
    "Shape matches [nmels; nfft/2 + 1]" expected_shape (G.shape filters)

let test_htk_variation () =
  let sr = 22050 in
  let nfft = 2048 in
  let nmels = 128 in
  let fmin = 0.0 in
  let filters_no_htk = Filterbank.mel Float32 ~htk:false sr nfft nmels fmin in
  let filters_htk = Filterbank.mel Float32 ~htk:true sr nfft nmels fmin in
  Alcotest.(check bool)
    "htk=true and htk=false should produce different results"
    (not (G.approx_equal ~eps:1e-6 filters_no_htk filters_htk))
    true

let test_norm_variation () =
  let sr = 22050 in
  let nfft = 2048 in
  let nmels = 128 in
  let fmin = 0.0 in
  let filters_no_norm = Filterbank.mel ~norm:None Float32 sr nfft nmels fmin in
  let filters_slaney =
    Filterbank.mel ~norm:(Some Filterbank.Slaney) Float32 sr nfft nmels fmin
  in
  let filters_pnorm =
    Filterbank.mel ~norm:(Some (Filterbank.PNorm 1.0)) Float32 sr nfft nmels
      fmin
  in
  Alcotest.(check bool)
    "norm=None and norm=Slaney should produce different results"
    (not (G.approx_equal ~eps:1e-6 filters_no_norm filters_slaney))
    true ;
  Alcotest.(check bool)
    "norm=None and norm=PNorm(1.0) should produce different results"
    (not (G.approx_equal ~eps:1e-6 filters_no_norm filters_pnorm))
    true ;
  Alcotest.(check bool)
    "norm=Slaney and norm=PNorm(1.0) should produce different results"
    (not (G.approx_equal ~eps:1e-6 filters_slaney filters_pnorm))
    true

let test_fmax_variation () =
  let sr = 22050 in
  let nfft = 2048 in
  let nmels = 128 in
  let fmin = 0.0 in
  let filters_fmax_none =
    Filterbank.mel ~fmax:None Float32 sr nfft nmels fmin
  in
  let filters_fmax_some =
    Filterbank.mel
      ~fmax:(Some (float_of_int sr /. 3.))
      Float32 sr nfft nmels fmin
  in
  Alcotest.(check bool)
    "fmax=None and fmax=Some(...) should produce different results"
    (not (G.approx_equal ~eps:1e-6 filters_fmax_none filters_fmax_some))
    true

let test_nmels_zero () =
  let sr = 22050 in
  let nfft = 2048 in
  let nmels = 0 in
  let fmin = 0.0 in
  let filters = Filterbank.mel Float32 sr nfft nmels fmin in
  let expected_shape = [|nmels; (nfft / 2) + 1|] in
  Alcotest.(check (array int))
    "Shape for nmels=0" expected_shape (G.shape filters) ;
  Alcotest.(check int) "Number of elements for nmels=0" 0 (G.numel filters)

let test_non_negativity () =
  let sr = 22050 in
  let nfft = 2048 in
  let nmels = 128 in
  let fmin = 0.0 in
  let filters = Filterbank.mel Float32 sr nfft nmels fmin in
  let min_val = if G.numel filters > 0 then G.min' filters else 0.0 in
  Alcotest.(check bool)
    "All filter weights are non-negative" (min_val >= -1e-6) true

let expected_mel_filters_slaney_htk_false_std_small =
  Audio.G.of_array Float32
    [| -0.0000000e+00
     ; 9.4134983e-04
     ; 1.8826997e-03
     ; 2.8240494e-03
     ; 2.8464235e-03
     ; 1.9050736e-03
     ; 9.6372393e-04
     ; 2.2374117e-05
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 4.5948784e-04
     ; 1.4008376e-03
     ; 2.3421873e-03
     ; 3.2835372e-03
     ; 2.3869355e-03
     ; 1.4455859e-03
     ; 5.0423609e-04
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 8.7309023e-04
     ; 1.7674374e-03
     ; 2.6617846e-03
     ; 2.7650548e-03
     ; 1.9557716e-03
     ; 1.1464886e-03
     ; 3.3720545e-04
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 3.0333505e-04
     ; 9.5658470e-04
     ; 1.6098343e-03
     ; 2.2630841e-03
     ; 2.2550602e-03
     ; 1.7746884e-03
     ; 1.2943164e-03
     ; 8.1394456e-04
     ; 3.3357262e-04
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 2.0551762e-04
     ; 5.5783667e-04
     ; 9.1015571e-04
     ; 1.2624747e-03
     ; 1.6147937e-03
     ; 1.7806316e-03
     ; 1.5227275e-03
     ; 1.2648234e-03
     ; 1.0069193e-03
     ; 7.4901519e-04
     ; 4.9111107e-04
     ; 2.3320699e-04
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 5.7693480e-05
     ; 2.4648409e-04
     ; 4.3527471e-04
     ; 6.2406535e-04
     ; 8.1285596e-04
     ; 1.0016466e-03
     ; 1.1904371e-03
     ; 1.3479150e-03
     ; 1.2097168e-03
     ; 1.0715185e-03
     ; 9.3332026e-04
     ; 7.9512206e-04
     ; 6.5692380e-04
     ; 5.1872554e-04
     ; 3.8052729e-04
     ; 2.4232903e-04
     ; 1.0413078e-04
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 9.6875237e-06
     ; 1.1085122e-04
     ; 2.1201491e-04
     ; 3.1317861e-04
     ; 4.1434230e-04
     ; 5.1550602e-04
     ; 6.1666971e-04
     ; 7.1783341e-04
     ; 8.1899710e-04
     ; 9.2016085e-04
     ; 9.7813131e-04
     ; 9.0407766e-04
     ; 8.3002396e-04
     ; 7.5597025e-04
     ; 6.8191654e-04
     ; 6.0786284e-04
     ; 5.3380907e-04
     ; 4.5975536e-04
     ; 3.8570166e-04
     ; 3.1164795e-04
     ; 2.3759424e-04
     ; 1.6354052e-04
     ; 8.9486806e-05
     ; 1.5433092e-05
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 1.3363075e-05
     ; 6.7571775e-05
     ; 1.2178048e-04
     ; 1.7598917e-04
     ; 2.3019788e-04
     ; 2.8440656e-04
     ; 3.3861527e-04
     ; 3.9282397e-04
     ; 4.4703268e-04
     ; 5.0124136e-04
     ; 5.5545010e-04
     ; 6.0965877e-04
     ; 6.6386751e-04
     ; 7.1807619e-04
     ; 6.9796154e-04
     ; 6.5827975e-04
     ; 6.1859802e-04
     ; 5.7891622e-04
     ; 5.3923443e-04
     ; 4.9955264e-04
     ; 4.5987088e-04
     ; 4.2018911e-04
     ; 3.8050729e-04
     ; 3.4082553e-04
     ; 3.0114374e-04
     ; 2.6146197e-04
     ; 2.2178020e-04
     ; 1.8209842e-04
     ; 1.4241663e-04
     ; 1.0273485e-04
     ; 6.3053070e-05
     ; 2.3371293e-05
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 2.2994123e-05
     ; 5.2041927e-05
     ; 8.1089725e-05
     ; 1.1013753e-04
     ; 1.3918533e-04
     ; 1.6823313e-04
     ; 1.9728094e-04
     ; 2.2632875e-04
     ; 2.5537654e-04
     ; 2.8442434e-04
     ; 3.1347215e-04
     ; 3.4251995e-04
     ; 3.7156776e-04
     ; 4.0061557e-04
     ; 4.2966337e-04
     ; 4.5871115e-04
     ; 4.8775898e-04
     ; 5.1680679e-04
     ; 5.2517501e-04
     ; 5.0391146e-04
     ; 4.8264794e-04
     ; 4.6138439e-04
     ; 4.4012087e-04
     ; 4.1885732e-04
     ; 3.9759380e-04
     ; 3.7633025e-04
     ; 3.5506673e-04
     ; 3.3380321e-04
     ; 3.1253966e-04
     ; 2.9127614e-04
     ; 2.7001259e-04
     ; 2.4874907e-04
     ; 2.2748554e-04
     ; 2.0622199e-04
     ; 1.8495847e-04
     ; 1.6369493e-04
     ; 1.4243140e-04
     ; 1.2116786e-04
     ; 9.9904333e-05
     ; 7.8640798e-05
     ; 5.7377263e-05
     ; 3.6113728e-05
     ; 1.4850194e-05
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 0.0000000e+00
     ; 6.3978400e-06
     ; 2.1963144e-05
     ; 3.7528447e-05
     ; 5.3093754e-05
     ; 6.8659050e-05
     ; 8.4224353e-05
     ; 9.9789664e-05
     ; 1.1535496e-04
     ; 1.3092026e-04
     ; 1.4648557e-04
     ; 1.6205087e-04
     ; 1.7761618e-04
     ; 1.9318148e-04
     ; 2.0874679e-04
     ; 2.2431208e-04
     ; 2.3987738e-04
     ; 2.5544269e-04
     ; 2.7100800e-04
     ; 2.8657331e-04
     ; 3.0213859e-04
     ; 3.1770390e-04
     ; 3.3326921e-04
     ; 3.4883452e-04
     ; 3.6439981e-04
     ; 3.7996512e-04
     ; 3.8739914e-04
     ; 3.7600505e-04
     ; 3.6461095e-04
     ; 3.5321686e-04
     ; 3.4182277e-04
     ; 3.3042868e-04
     ; 3.1903459e-04
     ; 3.0764050e-04
     ; 2.9624638e-04
     ; 2.8485231e-04
     ; 2.7345822e-04
     ; 2.6206410e-04
     ; 2.5067004e-04
     ; 2.3927593e-04
     ; 2.2788184e-04
     ; 2.1648777e-04
     ; 2.0509366e-04
     ; 1.9369957e-04
     ; 1.8230548e-04
     ; 1.7091139e-04
     ; 1.5951729e-04
     ; 1.4812319e-04
     ; 1.3672911e-04
     ; 1.2533502e-04
     ; 1.1394092e-04
     ; 1.0254683e-04
     ; 9.1152739e-05
     ; 7.9758647e-05
     ; 6.8364556e-05
     ; 5.6970461e-05
     ; 4.5576369e-05
     ; 3.4182278e-05
     ; 2.2788185e-05
     ; 1.1394092e-05
     ; 0.0000000e+00 |]
    [|10; 129|]

(* Alcotest for: slaney_htk_false_std_small *)
let test_mel_vs_librosa_slaney_htk_false_std_small () =
  let sr = 22050 in
  let n_fft = 256 in
  let n_mels = 10 in
  let fmin = 0.0 in
  let fmax_opt = None in
  let htk_val = false in
  let norm_opt = Some Filterbank.Slaney in
  let computed_filters =
    Filterbank.mel ?fmax:fmax_opt ~htk:htk_val ~norm:norm_opt Float32 sr n_fft
      n_mels fmin
  in
  Alcotest.(check float_ndarray)
    "Mel vs Librosa: slaney_htk_false_std_small"
    expected_mel_filters_slaney_htk_false_std_small computed_filters

let mel_tests =
  [ ("Shape Check", `Quick, test_mel_shape)
  ; ("HTK Variation", `Quick, test_htk_variation)
  ; ("Norm Variation", `Quick, test_norm_variation)
  ; ("fmax Variation", `Quick, test_fmax_variation)
  ; ("nmels = 0", `Quick, test_nmels_zero)
  ; ("Non-negativity of weights", `Quick, test_non_negativity)
  ; ( "Mel vs Librosa: slaney_htk_false_std_small"
    , `Quick
    , test_mel_vs_librosa_slaney_htk_false_std_small ) ]

let () = Alcotest.run "SoundML Filterbank" [("Mel Function", mel_tests)]
